@model EFA_DEMO.Models.PostView

@{
    ViewBag.Title = "Nouveau";
}

@if (Session["ParentPost"] == null)
{
    <h2>@Helper.GlyphiconAction("Index", "glyphicon-arrow-left", "Retour ")Nouveau post</h2>
}
else
{
    var parent = ((EFA_DEMO.Models.Post)Session["ParentPost"]).ToPostView();
    <h2>@Helper.GlyphiconAction("Index", "glyphicon-arrow-left", "Retour ")En réponse à :</h2>
    <div class="ellipsis" style="width:95%"><h2 style="color:black">@parent.Title</h2></div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-12">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Titre" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <textarea name="Content" id="Content" class="form-control" placeholder="Texte" cols="20" rows="12"></textarea>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control", @placeholder = "Étiquettes" } })
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Soumettre" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/autoComplete")

    <script>
        $(() => {
            $.ajax({
                url: "@Url.Action("GetAllTags", "Posts")",
                type: "GET"
            }).done(data => {
                InstallAutoComplete("Tags", data);
            });

        });
    </script>
}
